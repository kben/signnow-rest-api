// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetUserFolderReader is a Reader for the GetUserFolder structure.
type GetUserFolderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserFolderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserFolderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserFolderOK creates a GetUserFolderOK with default headers values
func NewGetUserFolderOK() *GetUserFolderOK {
	return &GetUserFolderOK{}
}

/*GetUserFolderOK handles this case with default header values.

GetUserFolderOK get user folder o k
*/
type GetUserFolderOK struct {
	Payload *GetUserFolderOKBody
}

func (o *GetUserFolderOK) Error() string {
	return fmt.Sprintf("[GET /user/folder][%d] getUserFolderOK  %+v", 200, o.Payload)
}

func (o *GetUserFolderOK) GetPayload() *GetUserFolderOKBody {
	return o.Payload
}

func (o *GetUserFolderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserFolderOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUserFolderOKBody get user folder o k body
swagger:model GetUserFolderOKBody
*/
type GetUserFolderOKBody struct {

	// created
	Created string `json:"created,omitempty"`

	// documents
	Documents []interface{} `json:"documents"`

	// folders
	Folders []*GetUserFolderOKBodyFoldersItems0 `json:"folders"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// parent id
	ParentID string `json:"parent_id,omitempty"`

	// shared
	Shared bool `json:"shared,omitempty"`

	// system folder
	SystemFolder bool `json:"system_folder,omitempty"`

	// total documents
	TotalDocuments int64 `json:"total_documents,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this get user folder o k body
func (o *GetUserFolderOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFolders(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserFolderOKBody) validateFolders(formats strfmt.Registry) error {

	if swag.IsZero(o.Folders) { // not required
		return nil
	}

	for i := 0; i < len(o.Folders); i++ {
		if swag.IsZero(o.Folders[i]) { // not required
			continue
		}

		if o.Folders[i] != nil {
			if err := o.Folders[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getUserFolderOK" + "." + "folders" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserFolderOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserFolderOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserFolderOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserFolderOKBodyFoldersItems0 get user folder o k body folders items0
swagger:model GetUserFolderOKBodyFoldersItems0
*/
type GetUserFolderOKBodyFoldersItems0 struct {

	// created
	Created string `json:"created,omitempty"`

	// document count
	DocumentCount string `json:"document_count,omitempty"`

	// folder count
	FolderCount string `json:"folder_count,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// shared
	Shared bool `json:"shared,omitempty"`

	// sub folders
	SubFolders []interface{} `json:"sub_folders"`

	// template count
	TemplateCount string `json:"template_count,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this get user folder o k body folders items0
func (o *GetUserFolderOKBodyFoldersItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserFolderOKBodyFoldersItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserFolderOKBodyFoldersItems0) UnmarshalBinary(b []byte) error {
	var res GetUserFolderOKBodyFoldersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
