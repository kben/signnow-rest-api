// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PutUserFolderFolderIDReader is a Reader for the PutUserFolderFolderID structure.
type PutUserFolderFolderIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserFolderFolderIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserFolderFolderIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutUserFolderFolderIDOK creates a PutUserFolderFolderIDOK with default headers values
func NewPutUserFolderFolderIDOK() *PutUserFolderFolderIDOK {
	return &PutUserFolderFolderIDOK{}
}

/*PutUserFolderFolderIDOK handles this case with default header values.

PutUserFolderFolderIDOK put user folder folder Id o k
*/
type PutUserFolderFolderIDOK struct {
	Payload *PutUserFolderFolderIDOKBody
}

func (o *PutUserFolderFolderIDOK) Error() string {
	return fmt.Sprintf("[PUT /user/folder/{folder_id}][%d] putUserFolderFolderIdOK  %+v", 200, o.Payload)
}

func (o *PutUserFolderFolderIDOK) GetPayload() *PutUserFolderFolderIDOKBody {
	return o.Payload
}

func (o *PutUserFolderFolderIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutUserFolderFolderIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutUserFolderFolderIDBody put user folder folder ID body
swagger:model PutUserFolderFolderIDBody
*/
type PutUserFolderFolderIDBody struct {

	// name
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this put user folder folder ID body
func (o *PutUserFolderFolderIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutUserFolderFolderIDBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutUserFolderFolderIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutUserFolderFolderIDBody) UnmarshalBinary(b []byte) error {
	var res PutUserFolderFolderIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutUserFolderFolderIDOKBody put user folder folder ID o k body
swagger:model PutUserFolderFolderIDOKBody
*/
type PutUserFolderFolderIDOKBody struct {

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this put user folder folder ID o k body
func (o *PutUserFolderFolderIDOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutUserFolderFolderIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutUserFolderFolderIDOKBody) UnmarshalBinary(b []byte) error {
	var res PutUserFolderFolderIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
