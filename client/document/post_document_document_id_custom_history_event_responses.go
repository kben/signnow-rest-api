// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostDocumentDocumentIDCustomHistoryEventReader is a Reader for the PostDocumentDocumentIDCustomHistoryEvent structure.
type PostDocumentDocumentIDCustomHistoryEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDocumentDocumentIDCustomHistoryEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDocumentDocumentIDCustomHistoryEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDocumentDocumentIDCustomHistoryEventOK creates a PostDocumentDocumentIDCustomHistoryEventOK with default headers values
func NewPostDocumentDocumentIDCustomHistoryEventOK() *PostDocumentDocumentIDCustomHistoryEventOK {
	return &PostDocumentDocumentIDCustomHistoryEventOK{}
}

/*PostDocumentDocumentIDCustomHistoryEventOK handles this case with default header values.

PostDocumentDocumentIDCustomHistoryEventOK post document document Id custom history event o k
*/
type PostDocumentDocumentIDCustomHistoryEventOK struct {
	Payload *PostDocumentDocumentIDCustomHistoryEventOKBody
}

func (o *PostDocumentDocumentIDCustomHistoryEventOK) Error() string {
	return fmt.Sprintf("[POST /document/{document_id}/custom_history_event][%d] postDocumentDocumentIdCustomHistoryEventOK  %+v", 200, o.Payload)
}

func (o *PostDocumentDocumentIDCustomHistoryEventOK) GetPayload() *PostDocumentDocumentIDCustomHistoryEventOKBody {
	return o.Payload
}

func (o *PostDocumentDocumentIDCustomHistoryEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostDocumentDocumentIDCustomHistoryEventOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostDocumentDocumentIDCustomHistoryEventBody post document document ID custom history event body
swagger:model PostDocumentDocumentIDCustomHistoryEventBody
*/
type PostDocumentDocumentIDCustomHistoryEventBody struct {

	// client timestamp
	ClientTimestamp int64 `json:"client_timestamp,omitempty"`

	// event type
	EventType string `json:"event_type,omitempty"`
}

// Validate validates this post document document ID custom history event body
func (o *PostDocumentDocumentIDCustomHistoryEventBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDocumentDocumentIDCustomHistoryEventBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDocumentDocumentIDCustomHistoryEventBody) UnmarshalBinary(b []byte) error {
	var res PostDocumentDocumentIDCustomHistoryEventBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostDocumentDocumentIDCustomHistoryEventOKBody post document document ID custom history event o k body
swagger:model PostDocumentDocumentIDCustomHistoryEventOKBody
*/
type PostDocumentDocumentIDCustomHistoryEventOKBody struct {

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this post document document ID custom history event o k body
func (o *PostDocumentDocumentIDCustomHistoryEventOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDocumentDocumentIDCustomHistoryEventOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDocumentDocumentIDCustomHistoryEventOKBody) UnmarshalBinary(b []byte) error {
	var res PostDocumentDocumentIDCustomHistoryEventOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
