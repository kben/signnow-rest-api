// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostDocumentDocumentIDDownloadLinkReader is a Reader for the PostDocumentDocumentIDDownloadLink structure.
type PostDocumentDocumentIDDownloadLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDocumentDocumentIDDownloadLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDocumentDocumentIDDownloadLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDocumentDocumentIDDownloadLinkOK creates a PostDocumentDocumentIDDownloadLinkOK with default headers values
func NewPostDocumentDocumentIDDownloadLinkOK() *PostDocumentDocumentIDDownloadLinkOK {
	return &PostDocumentDocumentIDDownloadLinkOK{}
}

/*PostDocumentDocumentIDDownloadLinkOK handles this case with default header values.

PostDocumentDocumentIDDownloadLinkOK post document document Id download link o k
*/
type PostDocumentDocumentIDDownloadLinkOK struct {
	Payload *PostDocumentDocumentIDDownloadLinkOKBody
}

func (o *PostDocumentDocumentIDDownloadLinkOK) Error() string {
	return fmt.Sprintf("[POST /document/{document_id}/download/link][%d] postDocumentDocumentIdDownloadLinkOK  %+v", 200, o.Payload)
}

func (o *PostDocumentDocumentIDDownloadLinkOK) GetPayload() *PostDocumentDocumentIDDownloadLinkOKBody {
	return o.Payload
}

func (o *PostDocumentDocumentIDDownloadLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostDocumentDocumentIDDownloadLinkOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostDocumentDocumentIDDownloadLinkOKBody post document document ID download link o k body
swagger:model PostDocumentDocumentIDDownloadLinkOKBody
*/
type PostDocumentDocumentIDDownloadLinkOKBody struct {

	// link
	// Format: uri
	Link strfmt.URI `json:"link,omitempty"`
}

// Validate validates this post document document ID download link o k body
func (o *PostDocumentDocumentIDDownloadLinkOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostDocumentDocumentIDDownloadLinkOKBody) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(o.Link) { // not required
		return nil
	}

	if err := validate.FormatOf("postDocumentDocumentIdDownloadLinkOK"+"."+"link", "body", "uri", o.Link.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostDocumentDocumentIDDownloadLinkOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDocumentDocumentIDDownloadLinkOKBody) UnmarshalBinary(b []byte) error {
	var res PostDocumentDocumentIDDownloadLinkOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
