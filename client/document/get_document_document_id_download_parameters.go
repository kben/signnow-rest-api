// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDocumentDocumentIDDownloadParams creates a new GetDocumentDocumentIDDownloadParams object
// with the default values initialized.
func NewGetDocumentDocumentIDDownloadParams() *GetDocumentDocumentIDDownloadParams {
	var (
		authorizationDefault = string("Bearer {{access_token}}")
	)
	return &GetDocumentDocumentIDDownloadParams{
		Authorization: authorizationDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDocumentDocumentIDDownloadParamsWithTimeout creates a new GetDocumentDocumentIDDownloadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDocumentDocumentIDDownloadParamsWithTimeout(timeout time.Duration) *GetDocumentDocumentIDDownloadParams {
	var (
		authorizationDefault = string("Bearer {{access_token}}")
	)
	return &GetDocumentDocumentIDDownloadParams{
		Authorization: authorizationDefault,

		timeout: timeout,
	}
}

// NewGetDocumentDocumentIDDownloadParamsWithContext creates a new GetDocumentDocumentIDDownloadParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDocumentDocumentIDDownloadParamsWithContext(ctx context.Context) *GetDocumentDocumentIDDownloadParams {
	var (
		authorizationDefault = string("Bearer {{access_token}}")
	)
	return &GetDocumentDocumentIDDownloadParams{
		Authorization: authorizationDefault,

		Context: ctx,
	}
}

// NewGetDocumentDocumentIDDownloadParamsWithHTTPClient creates a new GetDocumentDocumentIDDownloadParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDocumentDocumentIDDownloadParamsWithHTTPClient(client *http.Client) *GetDocumentDocumentIDDownloadParams {
	var (
		authorizationDefault = string("Bearer {{access_token}}")
	)
	return &GetDocumentDocumentIDDownloadParams{
		Authorization: authorizationDefault,
		HTTPClient:    client,
	}
}

/*GetDocumentDocumentIDDownloadParams contains all the parameters to send to the API endpoint
for the get document document ID download operation typically these are written to a http.Request
*/
type GetDocumentDocumentIDDownloadParams struct {

	/*Authorization
	  Bearer followed by access_token

	*/
	Authorization string
	/*DocumentID*/
	DocumentID string
	/*Type
	  Possible values are "collapsed" or "zip". Collapsed returns the raw data of the pdf document that can be written to a blank .pdf file. Zip returns the raw data of a zip file containing the pdf and any attachments on that document that can be written to blank a .zip file.

	*/
	Type string
	/*WithHistory
	  downloads collapsed document with a table containing the document's history if with_history=1

	*/
	WithHistory *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) WithTimeout(timeout time.Duration) *GetDocumentDocumentIDDownloadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) WithContext(ctx context.Context) *GetDocumentDocumentIDDownloadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) WithHTTPClient(client *http.Client) *GetDocumentDocumentIDDownloadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) WithAuthorization(authorization string) *GetDocumentDocumentIDDownloadParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithDocumentID adds the documentID to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) WithDocumentID(documentID string) *GetDocumentDocumentIDDownloadParams {
	o.SetDocumentID(documentID)
	return o
}

// SetDocumentID adds the documentId to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) SetDocumentID(documentID string) {
	o.DocumentID = documentID
}

// WithType adds the typeVar to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) WithType(typeVar string) *GetDocumentDocumentIDDownloadParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WithWithHistory adds the withHistory to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) WithWithHistory(withHistory *string) *GetDocumentDocumentIDDownloadParams {
	o.SetWithHistory(withHistory)
	return o
}

// SetWithHistory adds the withHistory to the get document document ID download params
func (o *GetDocumentDocumentIDDownloadParams) SetWithHistory(withHistory *string) {
	o.WithHistory = withHistory
}

// WriteToRequest writes these params to a swagger request
func (o *GetDocumentDocumentIDDownloadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param document_id
	if err := r.SetPathParam("document_id", o.DocumentID); err != nil {
		return err
	}

	// query param type
	qrType := o.Type
	qType := qrType
	if qType != "" {
		if err := r.SetQueryParam("type", qType); err != nil {
			return err
		}
	}

	if o.WithHistory != nil {

		// query param with_history
		var qrWithHistory string
		if o.WithHistory != nil {
			qrWithHistory = *o.WithHistory
		}
		qWithHistory := qrWithHistory
		if qWithHistory != "" {
			if err := r.SetQueryParam("with_history", qWithHistory); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
