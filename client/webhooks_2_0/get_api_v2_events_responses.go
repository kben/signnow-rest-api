// Code generated by go-swagger; DO NOT EDIT.

package webhooks_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAPIV2EventsReader is a Reader for the GetAPIV2Events structure.
type GetAPIV2EventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV2EventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV2EventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIV2EventsOK creates a GetAPIV2EventsOK with default headers values
func NewGetAPIV2EventsOK() *GetAPIV2EventsOK {
	return &GetAPIV2EventsOK{}
}

/*GetAPIV2EventsOK handles this case with default header values.

GetAPIV2EventsOK get Api v2 events o k
*/
type GetAPIV2EventsOK struct {
	Payload *GetAPIV2EventsOKBody
}

func (o *GetAPIV2EventsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/events][%d] getApiV2EventsOK  %+v", 200, o.Payload)
}

func (o *GetAPIV2EventsOK) GetPayload() *GetAPIV2EventsOKBody {
	return o.Payload
}

func (o *GetAPIV2EventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAPIV2EventsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAPIV2EventsOKBody get API v2 events o k body
swagger:model GetAPIV2EventsOKBody
*/
type GetAPIV2EventsOKBody struct {

	// data
	Data []*GetAPIV2EventsOKBodyDataItems0 `json:"data"`

	// meta
	Meta *GetAPIV2EventsOKBodyMeta `json:"meta,omitempty"`
}

// Validate validates this get API v2 events o k body
func (o *GetAPIV2EventsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAPIV2EventsOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getApiV2EventsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetAPIV2EventsOKBody) validateMeta(formats strfmt.Registry) error {

	if swag.IsZero(o.Meta) { // not required
		return nil
	}

	if o.Meta != nil {
		if err := o.Meta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getApiV2EventsOK" + "." + "meta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV2EventsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV2EventsOKBody) UnmarshalBinary(b []byte) error {
	var res GetAPIV2EventsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAPIV2EventsOKBodyDataItems0 get API v2 events o k body data items0
swagger:model GetAPIV2EventsOKBodyDataItems0
*/
type GetAPIV2EventsOKBodyDataItems0 struct {

	// action
	Action string `json:"action,omitempty"`

	// created
	Created int64 `json:"created,omitempty"`

	// entity id
	EntityID int64 `json:"entity_id,omitempty"`

	EntityUniqueID string `json:"entity_unique_id,omitempty"`

	// event
	Event string `json:"event,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// json attributes
	JSONAttributes *GetAPIV2EventsOKBodyDataItems0JSONAttributes `json:"json_attributes,omitempty"`
}

// Validate validates this get API v2 events o k body data items0
func (o *GetAPIV2EventsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateJSONAttributes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAPIV2EventsOKBodyDataItems0) validateJSONAttributes(formats strfmt.Registry) error {

	if swag.IsZero(o.JSONAttributes) { // not required
		return nil
	}

	if o.JSONAttributes != nil {
		if err := o.JSONAttributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("json_attributes")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res GetAPIV2EventsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAPIV2EventsOKBodyDataItems0JSONAttributes get API v2 events o k body data items0 JSON attributes
swagger:model GetAPIV2EventsOKBodyDataItems0JSONAttributes
*/
type GetAPIV2EventsOKBodyDataItems0JSONAttributes struct {

	// callback url
	CallbackURL string `json:"callback_url,omitempty"`

	// docid queryparam
	DocidQueryparam bool `json:"docid_queryparam,omitempty"`

	// headers
	Headers *GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders `json:"headers,omitempty"`

	// integration id
	IntegrationID string `json:"integration_id,omitempty"`

	// use tls 12
	UseTLS12 bool `json:"use_tls_12,omitempty"`
}

// Validate validates this get API v2 events o k body data items0 JSON attributes
func (o *GetAPIV2EventsOKBodyDataItems0JSONAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHeaders(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAPIV2EventsOKBodyDataItems0JSONAttributes) validateHeaders(formats strfmt.Registry) error {

	if swag.IsZero(o.Headers) { // not required
		return nil
	}

	if o.Headers != nil {
		if err := o.Headers.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("json_attributes" + "." + "headers")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyDataItems0JSONAttributes) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyDataItems0JSONAttributes) UnmarshalBinary(b []byte) error {
	var res GetAPIV2EventsOKBodyDataItems0JSONAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders get API v2 events o k body data items0 JSON attributes headers
swagger:model GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders
*/
type GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders struct {

	// bool head
	BoolHead bool `json:"bool_head,omitempty"`

	// float head
	FloatHead float64 `json:"float_head,omitempty"`

	// int head
	IntHead int64 `json:"int_head,omitempty"`

	// string head
	StringHead string `json:"string_head,omitempty"`
}

// Validate validates this get API v2 events o k body data items0 JSON attributes headers
func (o *GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders) UnmarshalBinary(b []byte) error {
	var res GetAPIV2EventsOKBodyDataItems0JSONAttributesHeaders
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAPIV2EventsOKBodyMeta get API v2 events o k body meta
swagger:model GetAPIV2EventsOKBodyMeta
*/
type GetAPIV2EventsOKBodyMeta struct {

	// pagination
	Pagination *GetAPIV2EventsOKBodyMetaPagination `json:"pagination,omitempty"`
}

// Validate validates this get API v2 events o k body meta
func (o *GetAPIV2EventsOKBodyMeta) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePagination(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAPIV2EventsOKBodyMeta) validatePagination(formats strfmt.Registry) error {

	if swag.IsZero(o.Pagination) { // not required
		return nil
	}

	if o.Pagination != nil {
		if err := o.Pagination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getApiV2EventsOK" + "." + "meta" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyMeta) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyMeta) UnmarshalBinary(b []byte) error {
	var res GetAPIV2EventsOKBodyMeta
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAPIV2EventsOKBodyMetaPagination get API v2 events o k body meta pagination
swagger:model GetAPIV2EventsOKBodyMetaPagination
*/
type GetAPIV2EventsOKBodyMetaPagination struct {

	// count
	Count int64 `json:"count,omitempty"`

	// current page
	CurrentPage int64 `json:"current_page,omitempty"`

	// links
	Links []interface{} `json:"links"`

	// per page
	PerPage int64 `json:"per_page,omitempty"`

	// total
	Total int64 `json:"total,omitempty"`

	// total pages
	TotalPages int64 `json:"total_pages,omitempty"`
}

// Validate validates this get API v2 events o k body meta pagination
func (o *GetAPIV2EventsOKBodyMetaPagination) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyMetaPagination) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIV2EventsOKBodyMetaPagination) UnmarshalBinary(b []byte) error {
	var res GetAPIV2EventsOKBodyMetaPagination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
