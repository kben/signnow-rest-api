// Code generated by go-swagger; DO NOT EDIT.

package webhooks_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteAPIV2EventsEventSubscriptionIDParams creates a new DeleteAPIV2EventsEventSubscriptionIDParams object
// with the default values initialized.
func NewDeleteAPIV2EventsEventSubscriptionIDParams() *DeleteAPIV2EventsEventSubscriptionIDParams {
	var (
		authorizationDefault = string("Basic {{basic_authorization_token}}")
	)
	return &DeleteAPIV2EventsEventSubscriptionIDParams{
		Authorization: authorizationDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAPIV2EventsEventSubscriptionIDParamsWithTimeout creates a new DeleteAPIV2EventsEventSubscriptionIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAPIV2EventsEventSubscriptionIDParamsWithTimeout(timeout time.Duration) *DeleteAPIV2EventsEventSubscriptionIDParams {
	var (
		authorizationDefault = string("Basic {{basic_authorization_token}}")
	)
	return &DeleteAPIV2EventsEventSubscriptionIDParams{
		Authorization: authorizationDefault,

		timeout: timeout,
	}
}

// NewDeleteAPIV2EventsEventSubscriptionIDParamsWithContext creates a new DeleteAPIV2EventsEventSubscriptionIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAPIV2EventsEventSubscriptionIDParamsWithContext(ctx context.Context) *DeleteAPIV2EventsEventSubscriptionIDParams {
	var (
		authorizationDefault = string("Basic {{basic_authorization_token}}")
	)
	return &DeleteAPIV2EventsEventSubscriptionIDParams{
		Authorization: authorizationDefault,

		Context: ctx,
	}
}

// NewDeleteAPIV2EventsEventSubscriptionIDParamsWithHTTPClient creates a new DeleteAPIV2EventsEventSubscriptionIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAPIV2EventsEventSubscriptionIDParamsWithHTTPClient(client *http.Client) *DeleteAPIV2EventsEventSubscriptionIDParams {
	var (
		authorizationDefault = string("Basic {{basic_authorization_token}}")
	)
	return &DeleteAPIV2EventsEventSubscriptionIDParams{
		Authorization: authorizationDefault,
		HTTPClient:    client,
	}
}

/*DeleteAPIV2EventsEventSubscriptionIDParams contains all the parameters to send to the API endpoint
for the delete API v2 events event subscription ID operation typically these are written to a http.Request
*/
type DeleteAPIV2EventsEventSubscriptionIDParams struct {

	/*Authorization
	  The word "Basic" followed by Basic Authorization Token

	*/
	Authorization string
	/*EventSubscriptionID*/
	EventSubscriptionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) WithTimeout(timeout time.Duration) *DeleteAPIV2EventsEventSubscriptionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) WithContext(ctx context.Context) *DeleteAPIV2EventsEventSubscriptionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) WithHTTPClient(client *http.Client) *DeleteAPIV2EventsEventSubscriptionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) WithAuthorization(authorization string) *DeleteAPIV2EventsEventSubscriptionIDParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithEventSubscriptionID adds the eventSubscriptionID to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) WithEventSubscriptionID(eventSubscriptionID string) *DeleteAPIV2EventsEventSubscriptionIDParams {
	o.SetEventSubscriptionID(eventSubscriptionID)
	return o
}

// SetEventSubscriptionID adds the eventSubscriptionId to the delete API v2 events event subscription ID params
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) SetEventSubscriptionID(eventSubscriptionID string) {
	o.EventSubscriptionID = eventSubscriptionID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAPIV2EventsEventSubscriptionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param event_subscription_id
	if err := r.SetPathParam("event_subscription_id", o.EventSubscriptionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
