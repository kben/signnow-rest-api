// Code generated by go-swagger; DO NOT EDIT.

package document_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetDocumentgroupDocumentGroupIDReader is a Reader for the GetDocumentgroupDocumentGroupID structure.
type GetDocumentgroupDocumentGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDocumentgroupDocumentGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDocumentgroupDocumentGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDocumentgroupDocumentGroupIDOK creates a GetDocumentgroupDocumentGroupIDOK with default headers values
func NewGetDocumentgroupDocumentGroupIDOK() *GetDocumentgroupDocumentGroupIDOK {
	return &GetDocumentgroupDocumentGroupIDOK{}
}

/*GetDocumentgroupDocumentGroupIDOK handles this case with default header values.

GetDocumentgroupDocumentGroupIDOK get documentgroup document group Id o k
*/
type GetDocumentgroupDocumentGroupIDOK struct {
	Payload *GetDocumentgroupDocumentGroupIDOKBody
}

func (o *GetDocumentgroupDocumentGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /documentgroup/{document_group_id}][%d] getDocumentgroupDocumentGroupIdOK  %+v", 200, o.Payload)
}

func (o *GetDocumentgroupDocumentGroupIDOK) GetPayload() *GetDocumentgroupDocumentGroupIDOKBody {
	return o.Payload
}

func (o *GetDocumentgroupDocumentGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDocumentgroupDocumentGroupIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetDocumentgroupDocumentGroupIDOKBody get documentgroup document group ID o k body
swagger:model GetDocumentgroupDocumentGroupIDOKBody
*/
type GetDocumentgroupDocumentGroupIDOKBody struct {

	// documents
	Documents []*GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0 `json:"documents"`

	// group name
	GroupName string `json:"group_name,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// invite id
	InviteID string `json:"invite_id,omitempty"`
}

// Validate validates this get documentgroup document group ID o k body
func (o *GetDocumentgroupDocumentGroupIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDocuments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDocumentgroupDocumentGroupIDOKBody) validateDocuments(formats strfmt.Registry) error {

	if swag.IsZero(o.Documents) { // not required
		return nil
	}

	for i := 0; i < len(o.Documents); i++ {
		if swag.IsZero(o.Documents[i]) { // not required
			continue
		}

		if o.Documents[i] != nil {
			if err := o.Documents[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getDocumentgroupDocumentGroupIdOK" + "." + "documents" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0 get documentgroup document group ID o k body documents items0
swagger:model GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0
*/
type GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0 struct {

	// document name
	DocumentName string `json:"document_name,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// roles
	Roles []string `json:"roles"`

	// thumbnail
	Thumbnail *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail `json:"thumbnail,omitempty"`
}

// Validate validates this get documentgroup document group ID o k body documents items0
func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateThumbnail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0) validateThumbnail(formats strfmt.Registry) error {

	if swag.IsZero(o.Thumbnail) { // not required
		return nil
	}

	if o.Thumbnail != nil {
		if err := o.Thumbnail.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("thumbnail")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail get documentgroup document group ID o k body documents items0 thumbnail
swagger:model GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail
*/
type GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail struct {

	// large
	// Format: uri
	Large strfmt.URI `json:"large,omitempty"`

	// medium
	// Format: uri
	Medium strfmt.URI `json:"medium,omitempty"`

	// small
	// Format: uri
	Small strfmt.URI `json:"small,omitempty"`
}

// Validate validates this get documentgroup document group ID o k body documents items0 thumbnail
func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLarge(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMedium(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSmall(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail) validateLarge(formats strfmt.Registry) error {

	if swag.IsZero(o.Large) { // not required
		return nil
	}

	if err := validate.FormatOf("thumbnail"+"."+"large", "body", "uri", o.Large.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail) validateMedium(formats strfmt.Registry) error {

	if swag.IsZero(o.Medium) { // not required
		return nil
	}

	if err := validate.FormatOf("thumbnail"+"."+"medium", "body", "uri", o.Medium.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail) validateSmall(formats strfmt.Registry) error {

	if swag.IsZero(o.Small) { // not required
		return nil
	}

	if err := validate.FormatOf("thumbnail"+"."+"small", "body", "uri", o.Small.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDOKBodyDocumentsItems0Thumbnail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
