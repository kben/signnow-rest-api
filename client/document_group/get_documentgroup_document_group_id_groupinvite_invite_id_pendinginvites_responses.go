// Code generated by go-swagger; DO NOT EDIT.

package document_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesReader is a Reader for the GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvites structure.
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK creates a GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK with default headers values
func NewGetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK() *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK {
	return &GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK{}
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK handles this case with default header values.

GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK get documentgroup document group Id groupinvite invite Id pendinginvites o k
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK struct {
	Payload *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK) Error() string {
	return fmt.Sprintf("[GET /documentgroup/{document_group_id}/groupinvite/{invite_id}/pendinginvites][%d] getDocumentgroupDocumentGroupIdGroupinviteInviteIdPendinginvitesOK  %+v", 200, o.Payload)
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK) GetPayload() *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody {
	return o.Payload
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody get documentgroup document group ID groupinvite invite ID pendinginvites o k body
swagger:model GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody struct {

	// document group name
	DocumentGroupName string `json:"document_group_name,omitempty"`

	// invites
	Invites []*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0 `json:"invites"`
}

// Validate validates this get documentgroup document group ID groupinvite invite ID pendinginvites o k body
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInvites(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody) validateInvites(formats strfmt.Registry) error {

	if swag.IsZero(o.Invites) { // not required
		return nil
	}

	for i := 0; i < len(o.Invites); i++ {
		if swag.IsZero(o.Invites[i]) { // not required
			continue
		}

		if o.Invites[i] != nil {
			if err := o.Invites[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getDocumentgroupDocumentGroupIdGroupinviteInviteIdPendinginvitesOK" + "." + "invites" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0 get documentgroup document group ID groupinvite invite ID pendinginvites o k body invites items0
swagger:model GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0 struct {

	// action
	Action string `json:"action,omitempty"`

	// document name
	DocumentName string `json:"document_name,omitempty"`

	// inviter email
	InviterEmail string `json:"inviter_email,omitempty"`

	// link
	Link string `json:"link,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this get documentgroup document group ID groupinvite invite ID pendinginvites o k body invites items0
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDGroupinviteInviteIDPendinginvitesOKBodyInvitesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
