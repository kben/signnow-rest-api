// Code generated by go-swagger; DO NOT EDIT.

package document_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetDocumentgroupDocumentGroupIDGroupinviteInviteIDReader is a Reader for the GetDocumentgroupDocumentGroupIDGroupinviteInviteID structure.
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK creates a GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK with default headers values
func NewGetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK() *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK {
	return &GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK{}
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK handles this case with default header values.

GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK get documentgroup document group Id groupinvite invite Id o k
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK struct {
	Payload *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK) Error() string {
	return fmt.Sprintf("[GET /documentgroup/{document_group_id}/groupinvite/{invite_id}][%d] getDocumentgroupDocumentGroupIdGroupinviteInviteIdOK  %+v", 200, o.Payload)
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK) GetPayload() *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody {
	return o.Payload
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody get documentgroup document group ID groupinvite invite ID o k body
swagger:model GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody struct {

	// invite
	Invite *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite `json:"invite,omitempty"`
}

// Validate validates this get documentgroup document group ID groupinvite invite ID o k body
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInvite(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody) validateInvite(formats strfmt.Registry) error {

	if swag.IsZero(o.Invite) { // not required
		return nil
	}

	if o.Invite != nil {
		if err := o.Invite.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getDocumentgroupDocumentGroupIdGroupinviteInviteIdOK" + "." + "invite")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite get documentgroup document group ID groupinvite invite ID o k body invite
swagger:model GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite struct {

	// id
	ID string `json:"id,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// steps
	Steps []*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0 `json:"steps"`
}

// Validate validates this get documentgroup document group ID groupinvite invite ID o k body invite
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSteps(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite) validateSteps(formats strfmt.Registry) error {

	if swag.IsZero(o.Steps) { // not required
		return nil
	}

	for i := 0; i < len(o.Steps); i++ {
		if swag.IsZero(o.Steps[i]) { // not required
			continue
		}

		if o.Steps[i] != nil {
			if err := o.Steps[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getDocumentgroupDocumentGroupIdGroupinviteInviteIdOK" + "." + "invite" + "." + "steps" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInvite
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0 get documentgroup document group ID groupinvite invite ID o k body invite steps items0
swagger:model GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0 struct {

	// actions
	Actions []*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0 `json:"actions"`

	// id
	ID string `json:"id,omitempty"`

	// order
	Order int64 `json:"order,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this get documentgroup document group ID groupinvite invite ID o k body invite steps items0
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0) validateActions(formats strfmt.Registry) error {

	if swag.IsZero(o.Actions) { // not required
		return nil
	}

	for i := 0; i < len(o.Actions); i++ {
		if swag.IsZero(o.Actions[i]) { // not required
			continue
		}

		if o.Actions[i] != nil {
			if err := o.Actions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("actions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0 get documentgroup document group ID groupinvite invite ID o k body invite steps items0 actions items0
swagger:model GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0
*/
type GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0 struct {

	// action
	Action string `json:"action,omitempty"`

	// document id
	DocumentID string `json:"document_id,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// role name
	RoleName string `json:"role_name,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this get documentgroup document group ID groupinvite invite ID o k body invite steps items0 actions items0
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0) UnmarshalBinary(b []byte) error {
	var res GetDocumentgroupDocumentGroupIDGroupinviteInviteIDOKBodyInviteStepsItems0ActionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
