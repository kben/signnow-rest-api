// Code generated by go-swagger; DO NOT EDIT.

package o_auth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostOauth2TokenReader is a Reader for the PostOauth2Token structure.
type PostOauth2TokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOauth2TokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOauth2TokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOauth2TokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOauth2TokenOK creates a PostOauth2TokenOK with default headers values
func NewPostOauth2TokenOK() *PostOauth2TokenOK {
	return &PostOauth2TokenOK{}
}

/*PostOauth2TokenOK handles this case with default header values.

PostOauth2TokenOK post oauth2 token o k
*/
type PostOauth2TokenOK struct {
	Payload *PostOauth2TokenOKBody
}

func (o *PostOauth2TokenOK) Error() string {
	return fmt.Sprintf("[POST /oauth2/token][%d] postOauth2TokenOK  %+v", 200, o.Payload)
}

func (o *PostOauth2TokenOK) GetPayload() *PostOauth2TokenOKBody {
	return o.Payload
}

func (o *PostOauth2TokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostOauth2TokenOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauth2TokenBadRequest creates a PostOauth2TokenBadRequest with default headers values
func NewPostOauth2TokenBadRequest() *PostOauth2TokenBadRequest {
	return &PostOauth2TokenBadRequest{}
}

/*PostOauth2TokenBadRequest handles this case with default header values.

* "invalid_client" - incorrect basic auth token
* "invalid_request" - request without a required parameter
* "invalid_scope" - invalid scope
* "Invalid credentials." - either incorrect password or non-existing email provided
 */
type PostOauth2TokenBadRequest struct {
}

func (o *PostOauth2TokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /oauth2/token][%d] postOauth2TokenBadRequest ", 400)
}

func (o *PostOauth2TokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostOauth2TokenOKBody post oauth2 token o k body
swagger:model PostOauth2TokenOKBody
*/
type PostOauth2TokenOKBody struct {

	// access token
	AccessToken string `json:"access_token,omitempty"`

	// expires in
	ExpiresIn int64 `json:"expires_in,omitempty"`

	// last login
	LastLogin int64 `json:"last_login,omitempty"`

	// refresh token
	RefreshToken string `json:"refresh_token,omitempty"`

	// scope
	Scope string `json:"scope,omitempty"`

	// token type
	TokenType string `json:"token_type,omitempty"`
}

// Validate validates this post oauth2 token o k body
func (o *PostOauth2TokenOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostOauth2TokenOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostOauth2TokenOKBody) UnmarshalBinary(b []byte) error {
	var res PostOauth2TokenOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
